import math
import time
import sys
from gurobipy import *
Beta = 0.5
M = [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
T = [2.2303682, 2.9484057, 4.1314123, 4.6657138, 6.1536939, 6.7237283, 7.2925117, 8.455604, 9.1555421, 10.1703861, 11.1036757, 11.9699692, 12.9022582, 14.0939618, 14.8891803, 15.8241248, 16.9885437, 17.7902276, 18.7351194, 19.6880561]
N = 20
k = 0
for y in T:
   min = y
   i = k
   while i < len(T):
      if(T[i] <= min):
         min = T[i]
         j = i
      i = i + 1
   tmp = M[j]
   M[j] = M[k]
   M[k] = tmp
   tmp = T[j]
   T[j] = T[k]
   T[k] = tmp
   k = k + 1
T = [x for x in T]
M = [x for x in M]

S = 0
for x in M: 
   S += x 
init_p = 0.0
for x,y in zip(T,M): 
   init_p += x * y 
constant = init_p * (Beta + 1.0) 
m = Model("kruskal_20_0.5")
x00 = m.addVar(lb=0.0,ub=1.0,name="x00")
x01 = m.addVar(lb=0.0,ub=1.0,name="x01")
x02 = m.addVar(lb=0.0,ub=1.0,name="x02")
x03 = m.addVar(lb=0.0,ub=1.0,name="x03")
x04 = m.addVar(lb=0.0,ub=1.0,name="x04")
x05 = m.addVar(lb=0.0,ub=1.0,name="x05")
x06 = m.addVar(lb=0.0,ub=1.0,name="x06")
x07 = m.addVar(lb=0.0,ub=1.0,name="x07")
x08 = m.addVar(lb=0.0,ub=1.0,name="x08")
x09 = m.addVar(lb=0.0,ub=1.0,name="x09")
x010 = m.addVar(lb=0.0,ub=1.0,name="x010")
x011 = m.addVar(lb=0.0,ub=1.0,name="x011")
x012 = m.addVar(lb=0.0,ub=1.0,name="x012")
x013 = m.addVar(lb=0.0,ub=1.0,name="x013")
x014 = m.addVar(lb=0.0,ub=1.0,name="x014")
x015 = m.addVar(lb=0.0,ub=1.0,name="x015")
x016 = m.addVar(lb=0.0,ub=1.0,name="x016")
x017 = m.addVar(lb=0.0,ub=1.0,name="x017")
x018 = m.addVar(lb=0.0,ub=1.0,name="x018")
x019 = m.addVar(lb=0.0,ub=1.0,name="x019")
x10 = m.addVar(lb=0.0,ub=0.0,name="x10")
x11 = m.addVar(lb=0.0,ub=1.0,name="x11")
x12 = m.addVar(lb=0.0,ub=1.0,name="x12")
x13 = m.addVar(lb=0.0,ub=1.0,name="x13")
x14 = m.addVar(lb=0.0,ub=1.0,name="x14")
x15 = m.addVar(lb=0.0,ub=1.0,name="x15")
x16 = m.addVar(lb=0.0,ub=1.0,name="x16")
x17 = m.addVar(lb=0.0,ub=1.0,name="x17")
x18 = m.addVar(lb=0.0,ub=1.0,name="x18")
x19 = m.addVar(lb=0.0,ub=1.0,name="x19")
x110 = m.addVar(lb=0.0,ub=1.0,name="x110")
x111 = m.addVar(lb=0.0,ub=1.0,name="x111")
x112 = m.addVar(lb=0.0,ub=1.0,name="x112")
x113 = m.addVar(lb=0.0,ub=1.0,name="x113")
x114 = m.addVar(lb=0.0,ub=1.0,name="x114")
x115 = m.addVar(lb=0.0,ub=1.0,name="x115")
x116 = m.addVar(lb=0.0,ub=1.0,name="x116")
x117 = m.addVar(lb=0.0,ub=1.0,name="x117")
x118 = m.addVar(lb=0.0,ub=1.0,name="x118")
x119 = m.addVar(lb=0.0,ub=1.0,name="x119")
x20 = m.addVar(lb=0.0,ub=0.0,name="x20")
x21 = m.addVar(lb=0.0,ub=0.0,name="x21")
x22 = m.addVar(lb=0.0,ub=1.0,name="x22")
x23 = m.addVar(lb=0.0,ub=1.0,name="x23")
x24 = m.addVar(lb=0.0,ub=1.0,name="x24")
x25 = m.addVar(lb=0.0,ub=1.0,name="x25")
x26 = m.addVar(lb=0.0,ub=1.0,name="x26")
x27 = m.addVar(lb=0.0,ub=1.0,name="x27")
x28 = m.addVar(lb=0.0,ub=1.0,name="x28")
x29 = m.addVar(lb=0.0,ub=1.0,name="x29")
x210 = m.addVar(lb=0.0,ub=1.0,name="x210")
x211 = m.addVar(lb=0.0,ub=1.0,name="x211")
x212 = m.addVar(lb=0.0,ub=1.0,name="x212")
x213 = m.addVar(lb=0.0,ub=1.0,name="x213")
x214 = m.addVar(lb=0.0,ub=1.0,name="x214")
x215 = m.addVar(lb=0.0,ub=1.0,name="x215")
x216 = m.addVar(lb=0.0,ub=1.0,name="x216")
x217 = m.addVar(lb=0.0,ub=1.0,name="x217")
x218 = m.addVar(lb=0.0,ub=1.0,name="x218")
x219 = m.addVar(lb=0.0,ub=1.0,name="x219")
x30 = m.addVar(lb=0.0,ub=0.0,name="x30")
x31 = m.addVar(lb=0.0,ub=0.0,name="x31")
x32 = m.addVar(lb=0.0,ub=0.0,name="x32")
x33 = m.addVar(lb=0.0,ub=1.0,name="x33")
x34 = m.addVar(lb=0.0,ub=1.0,name="x34")
x35 = m.addVar(lb=0.0,ub=1.0,name="x35")
x36 = m.addVar(lb=0.0,ub=1.0,name="x36")
x37 = m.addVar(lb=0.0,ub=1.0,name="x37")
x38 = m.addVar(lb=0.0,ub=1.0,name="x38")
x39 = m.addVar(lb=0.0,ub=1.0,name="x39")
x310 = m.addVar(lb=0.0,ub=1.0,name="x310")
x311 = m.addVar(lb=0.0,ub=1.0,name="x311")
x312 = m.addVar(lb=0.0,ub=1.0,name="x312")
x313 = m.addVar(lb=0.0,ub=1.0,name="x313")
x314 = m.addVar(lb=0.0,ub=1.0,name="x314")
x315 = m.addVar(lb=0.0,ub=1.0,name="x315")
x316 = m.addVar(lb=0.0,ub=1.0,name="x316")
x317 = m.addVar(lb=0.0,ub=1.0,name="x317")
x318 = m.addVar(lb=0.0,ub=1.0,name="x318")
x319 = m.addVar(lb=0.0,ub=1.0,name="x319")
x40 = m.addVar(lb=0.0,ub=0.0,name="x40")
x41 = m.addVar(lb=0.0,ub=0.0,name="x41")
x42 = m.addVar(lb=0.0,ub=0.0,name="x42")
x43 = m.addVar(lb=0.0,ub=0.0,name="x43")
x44 = m.addVar(lb=0.0,ub=1.0,name="x44")
x45 = m.addVar(lb=0.0,ub=1.0,name="x45")
x46 = m.addVar(lb=0.0,ub=1.0,name="x46")
x47 = m.addVar(lb=0.0,ub=1.0,name="x47")
x48 = m.addVar(lb=0.0,ub=1.0,name="x48")
x49 = m.addVar(lb=0.0,ub=1.0,name="x49")
x410 = m.addVar(lb=0.0,ub=1.0,name="x410")
x411 = m.addVar(lb=0.0,ub=1.0,name="x411")
x412 = m.addVar(lb=0.0,ub=1.0,name="x412")
x413 = m.addVar(lb=0.0,ub=1.0,name="x413")
x414 = m.addVar(lb=0.0,ub=1.0,name="x414")
x415 = m.addVar(lb=0.0,ub=1.0,name="x415")
x416 = m.addVar(lb=0.0,ub=1.0,name="x416")
x417 = m.addVar(lb=0.0,ub=1.0,name="x417")
x418 = m.addVar(lb=0.0,ub=1.0,name="x418")
x419 = m.addVar(lb=0.0,ub=1.0,name="x419")
x50 = m.addVar(lb=0.0,ub=0.0,name="x50")
x51 = m.addVar(lb=0.0,ub=0.0,name="x51")
x52 = m.addVar(lb=0.0,ub=0.0,name="x52")
x53 = m.addVar(lb=0.0,ub=0.0,name="x53")
x54 = m.addVar(lb=0.0,ub=0.0,name="x54")
x55 = m.addVar(lb=0.0,ub=1.0,name="x55")
x56 = m.addVar(lb=0.0,ub=1.0,name="x56")
x57 = m.addVar(lb=0.0,ub=1.0,name="x57")
x58 = m.addVar(lb=0.0,ub=1.0,name="x58")
x59 = m.addVar(lb=0.0,ub=1.0,name="x59")
x510 = m.addVar(lb=0.0,ub=1.0,name="x510")
x511 = m.addVar(lb=0.0,ub=1.0,name="x511")
x512 = m.addVar(lb=0.0,ub=1.0,name="x512")
x513 = m.addVar(lb=0.0,ub=1.0,name="x513")
x514 = m.addVar(lb=0.0,ub=1.0,name="x514")
x515 = m.addVar(lb=0.0,ub=1.0,name="x515")
x516 = m.addVar(lb=0.0,ub=1.0,name="x516")
x517 = m.addVar(lb=0.0,ub=1.0,name="x517")
x518 = m.addVar(lb=0.0,ub=1.0,name="x518")
x519 = m.addVar(lb=0.0,ub=1.0,name="x519")
x60 = m.addVar(lb=0.0,ub=0.0,name="x60")
x61 = m.addVar(lb=0.0,ub=0.0,name="x61")
x62 = m.addVar(lb=0.0,ub=0.0,name="x62")
x63 = m.addVar(lb=0.0,ub=0.0,name="x63")
x64 = m.addVar(lb=0.0,ub=0.0,name="x64")
x65 = m.addVar(lb=0.0,ub=0.0,name="x65")
x66 = m.addVar(lb=0.0,ub=1.0,name="x66")
x67 = m.addVar(lb=0.0,ub=1.0,name="x67")
x68 = m.addVar(lb=0.0,ub=1.0,name="x68")
x69 = m.addVar(lb=0.0,ub=1.0,name="x69")
x610 = m.addVar(lb=0.0,ub=1.0,name="x610")
x611 = m.addVar(lb=0.0,ub=1.0,name="x611")
x612 = m.addVar(lb=0.0,ub=1.0,name="x612")
x613 = m.addVar(lb=0.0,ub=1.0,name="x613")
x614 = m.addVar(lb=0.0,ub=1.0,name="x614")
x615 = m.addVar(lb=0.0,ub=1.0,name="x615")
x616 = m.addVar(lb=0.0,ub=1.0,name="x616")
x617 = m.addVar(lb=0.0,ub=1.0,name="x617")
x618 = m.addVar(lb=0.0,ub=1.0,name="x618")
x619 = m.addVar(lb=0.0,ub=1.0,name="x619")
x70 = m.addVar(lb=0.0,ub=0.0,name="x70")
x71 = m.addVar(lb=0.0,ub=0.0,name="x71")
x72 = m.addVar(lb=0.0,ub=0.0,name="x72")
x73 = m.addVar(lb=0.0,ub=0.0,name="x73")
x74 = m.addVar(lb=0.0,ub=0.0,name="x74")
x75 = m.addVar(lb=0.0,ub=0.0,name="x75")
x76 = m.addVar(lb=0.0,ub=0.0,name="x76")
x77 = m.addVar(lb=0.0,ub=1.0,name="x77")
x78 = m.addVar(lb=0.0,ub=1.0,name="x78")
x79 = m.addVar(lb=0.0,ub=1.0,name="x79")
x710 = m.addVar(lb=0.0,ub=1.0,name="x710")
x711 = m.addVar(lb=0.0,ub=1.0,name="x711")
x712 = m.addVar(lb=0.0,ub=1.0,name="x712")
x713 = m.addVar(lb=0.0,ub=1.0,name="x713")
x714 = m.addVar(lb=0.0,ub=1.0,name="x714")
x715 = m.addVar(lb=0.0,ub=1.0,name="x715")
x716 = m.addVar(lb=0.0,ub=1.0,name="x716")
x717 = m.addVar(lb=0.0,ub=1.0,name="x717")
x718 = m.addVar(lb=0.0,ub=1.0,name="x718")
x719 = m.addVar(lb=0.0,ub=1.0,name="x719")
x80 = m.addVar(lb=0.0,ub=0.0,name="x80")
x81 = m.addVar(lb=0.0,ub=0.0,name="x81")
x82 = m.addVar(lb=0.0,ub=0.0,name="x82")
x83 = m.addVar(lb=0.0,ub=0.0,name="x83")
x84 = m.addVar(lb=0.0,ub=0.0,name="x84")
x85 = m.addVar(lb=0.0,ub=0.0,name="x85")
x86 = m.addVar(lb=0.0,ub=0.0,name="x86")
x87 = m.addVar(lb=0.0,ub=0.0,name="x87")
x88 = m.addVar(lb=0.0,ub=1.0,name="x88")
x89 = m.addVar(lb=0.0,ub=1.0,name="x89")
x810 = m.addVar(lb=0.0,ub=1.0,name="x810")
x811 = m.addVar(lb=0.0,ub=1.0,name="x811")
x812 = m.addVar(lb=0.0,ub=1.0,name="x812")
x813 = m.addVar(lb=0.0,ub=1.0,name="x813")
x814 = m.addVar(lb=0.0,ub=1.0,name="x814")
x815 = m.addVar(lb=0.0,ub=1.0,name="x815")
x816 = m.addVar(lb=0.0,ub=1.0,name="x816")
x817 = m.addVar(lb=0.0,ub=1.0,name="x817")
x818 = m.addVar(lb=0.0,ub=1.0,name="x818")
x819 = m.addVar(lb=0.0,ub=1.0,name="x819")
x90 = m.addVar(lb=0.0,ub=0.0,name="x90")
x91 = m.addVar(lb=0.0,ub=0.0,name="x91")
x92 = m.addVar(lb=0.0,ub=0.0,name="x92")
x93 = m.addVar(lb=0.0,ub=0.0,name="x93")
x94 = m.addVar(lb=0.0,ub=0.0,name="x94")
x95 = m.addVar(lb=0.0,ub=0.0,name="x95")
x96 = m.addVar(lb=0.0,ub=0.0,name="x96")
x97 = m.addVar(lb=0.0,ub=0.0,name="x97")
x98 = m.addVar(lb=0.0,ub=0.0,name="x98")
x99 = m.addVar(lb=0.0,ub=1.0,name="x99")
x910 = m.addVar(lb=0.0,ub=1.0,name="x910")
x911 = m.addVar(lb=0.0,ub=1.0,name="x911")
x912 = m.addVar(lb=0.0,ub=1.0,name="x912")
x913 = m.addVar(lb=0.0,ub=1.0,name="x913")
x914 = m.addVar(lb=0.0,ub=1.0,name="x914")
x915 = m.addVar(lb=0.0,ub=1.0,name="x915")
x916 = m.addVar(lb=0.0,ub=1.0,name="x916")
x917 = m.addVar(lb=0.0,ub=1.0,name="x917")
x918 = m.addVar(lb=0.0,ub=1.0,name="x918")
x919 = m.addVar(lb=0.0,ub=1.0,name="x919")
x100 = m.addVar(lb=0.0,ub=0.0,name="x100")
x101 = m.addVar(lb=0.0,ub=0.0,name="x101")
x102 = m.addVar(lb=0.0,ub=0.0,name="x102")
x103 = m.addVar(lb=0.0,ub=0.0,name="x103")
x104 = m.addVar(lb=0.0,ub=0.0,name="x104")
x105 = m.addVar(lb=0.0,ub=0.0,name="x105")
x106 = m.addVar(lb=0.0,ub=0.0,name="x106")
x107 = m.addVar(lb=0.0,ub=0.0,name="x107")
x108 = m.addVar(lb=0.0,ub=0.0,name="x108")
x109 = m.addVar(lb=0.0,ub=0.0,name="x109")
x1010 = m.addVar(lb=0.0,ub=1.0,name="x1010")
x1011 = m.addVar(lb=0.0,ub=1.0,name="x1011")
x1012 = m.addVar(lb=0.0,ub=1.0,name="x1012")
x1013 = m.addVar(lb=0.0,ub=1.0,name="x1013")
x1014 = m.addVar(lb=0.0,ub=1.0,name="x1014")
x1015 = m.addVar(lb=0.0,ub=1.0,name="x1015")
x1016 = m.addVar(lb=0.0,ub=1.0,name="x1016")
x1017 = m.addVar(lb=0.0,ub=1.0,name="x1017")
x1018 = m.addVar(lb=0.0,ub=1.0,name="x1018")
x1019 = m.addVar(lb=0.0,ub=1.0,name="x1019")
x110 = m.addVar(lb=0.0,ub=0.0,name="x110")
x111 = m.addVar(lb=0.0,ub=0.0,name="x111")
x112 = m.addVar(lb=0.0,ub=0.0,name="x112")
x113 = m.addVar(lb=0.0,ub=0.0,name="x113")
x114 = m.addVar(lb=0.0,ub=0.0,name="x114")
x115 = m.addVar(lb=0.0,ub=0.0,name="x115")
x116 = m.addVar(lb=0.0,ub=0.0,name="x116")
x117 = m.addVar(lb=0.0,ub=0.0,name="x117")
x118 = m.addVar(lb=0.0,ub=0.0,name="x118")
x119 = m.addVar(lb=0.0,ub=0.0,name="x119")
x1110 = m.addVar(lb=0.0,ub=0.0,name="x1110")
x1111 = m.addVar(lb=0.0,ub=1.0,name="x1111")
x1112 = m.addVar(lb=0.0,ub=1.0,name="x1112")
x1113 = m.addVar(lb=0.0,ub=1.0,name="x1113")
x1114 = m.addVar(lb=0.0,ub=1.0,name="x1114")
x1115 = m.addVar(lb=0.0,ub=1.0,name="x1115")
x1116 = m.addVar(lb=0.0,ub=1.0,name="x1116")
x1117 = m.addVar(lb=0.0,ub=1.0,name="x1117")
x1118 = m.addVar(lb=0.0,ub=1.0,name="x1118")
x1119 = m.addVar(lb=0.0,ub=1.0,name="x1119")
x120 = m.addVar(lb=0.0,ub=0.0,name="x120")
x121 = m.addVar(lb=0.0,ub=0.0,name="x121")
x122 = m.addVar(lb=0.0,ub=0.0,name="x122")
x123 = m.addVar(lb=0.0,ub=0.0,name="x123")
x124 = m.addVar(lb=0.0,ub=0.0,name="x124")
x125 = m.addVar(lb=0.0,ub=0.0,name="x125")
x126 = m.addVar(lb=0.0,ub=0.0,name="x126")
x127 = m.addVar(lb=0.0,ub=0.0,name="x127")
x128 = m.addVar(lb=0.0,ub=0.0,name="x128")
x129 = m.addVar(lb=0.0,ub=0.0,name="x129")
x1210 = m.addVar(lb=0.0,ub=0.0,name="x1210")
x1211 = m.addVar(lb=0.0,ub=0.0,name="x1211")
x1212 = m.addVar(lb=0.0,ub=1.0,name="x1212")
x1213 = m.addVar(lb=0.0,ub=1.0,name="x1213")
x1214 = m.addVar(lb=0.0,ub=1.0,name="x1214")
x1215 = m.addVar(lb=0.0,ub=1.0,name="x1215")
x1216 = m.addVar(lb=0.0,ub=1.0,name="x1216")
x1217 = m.addVar(lb=0.0,ub=1.0,name="x1217")
x1218 = m.addVar(lb=0.0,ub=1.0,name="x1218")
x1219 = m.addVar(lb=0.0,ub=1.0,name="x1219")
x130 = m.addVar(lb=0.0,ub=0.0,name="x130")
x131 = m.addVar(lb=0.0,ub=0.0,name="x131")
x132 = m.addVar(lb=0.0,ub=0.0,name="x132")
x133 = m.addVar(lb=0.0,ub=0.0,name="x133")
x134 = m.addVar(lb=0.0,ub=0.0,name="x134")
x135 = m.addVar(lb=0.0,ub=0.0,name="x135")
x136 = m.addVar(lb=0.0,ub=0.0,name="x136")
x137 = m.addVar(lb=0.0,ub=0.0,name="x137")
x138 = m.addVar(lb=0.0,ub=0.0,name="x138")
x139 = m.addVar(lb=0.0,ub=0.0,name="x139")
x1310 = m.addVar(lb=0.0,ub=0.0,name="x1310")
x1311 = m.addVar(lb=0.0,ub=0.0,name="x1311")
x1312 = m.addVar(lb=0.0,ub=0.0,name="x1312")
x1313 = m.addVar(lb=0.0,ub=1.0,name="x1313")
x1314 = m.addVar(lb=0.0,ub=1.0,name="x1314")
x1315 = m.addVar(lb=0.0,ub=1.0,name="x1315")
x1316 = m.addVar(lb=0.0,ub=1.0,name="x1316")
x1317 = m.addVar(lb=0.0,ub=1.0,name="x1317")
x1318 = m.addVar(lb=0.0,ub=1.0,name="x1318")
x1319 = m.addVar(lb=0.0,ub=1.0,name="x1319")
x140 = m.addVar(lb=0.0,ub=0.0,name="x140")
x141 = m.addVar(lb=0.0,ub=0.0,name="x141")
x142 = m.addVar(lb=0.0,ub=0.0,name="x142")
x143 = m.addVar(lb=0.0,ub=0.0,name="x143")
x144 = m.addVar(lb=0.0,ub=0.0,name="x144")
x145 = m.addVar(lb=0.0,ub=0.0,name="x145")
x146 = m.addVar(lb=0.0,ub=0.0,name="x146")
x147 = m.addVar(lb=0.0,ub=0.0,name="x147")
x148 = m.addVar(lb=0.0,ub=0.0,name="x148")
x149 = m.addVar(lb=0.0,ub=0.0,name="x149")
x1410 = m.addVar(lb=0.0,ub=0.0,name="x1410")
x1411 = m.addVar(lb=0.0,ub=0.0,name="x1411")
x1412 = m.addVar(lb=0.0,ub=0.0,name="x1412")
x1413 = m.addVar(lb=0.0,ub=0.0,name="x1413")
x1414 = m.addVar(lb=0.0,ub=1.0,name="x1414")
x1415 = m.addVar(lb=0.0,ub=1.0,name="x1415")
x1416 = m.addVar(lb=0.0,ub=1.0,name="x1416")
x1417 = m.addVar(lb=0.0,ub=1.0,name="x1417")
x1418 = m.addVar(lb=0.0,ub=1.0,name="x1418")
x1419 = m.addVar(lb=0.0,ub=1.0,name="x1419")
x150 = m.addVar(lb=0.0,ub=0.0,name="x150")
x151 = m.addVar(lb=0.0,ub=0.0,name="x151")
x152 = m.addVar(lb=0.0,ub=0.0,name="x152")
x153 = m.addVar(lb=0.0,ub=0.0,name="x153")
x154 = m.addVar(lb=0.0,ub=0.0,name="x154")
x155 = m.addVar(lb=0.0,ub=0.0,name="x155")
x156 = m.addVar(lb=0.0,ub=0.0,name="x156")
x157 = m.addVar(lb=0.0,ub=0.0,name="x157")
x158 = m.addVar(lb=0.0,ub=0.0,name="x158")
x159 = m.addVar(lb=0.0,ub=0.0,name="x159")
x1510 = m.addVar(lb=0.0,ub=0.0,name="x1510")
x1511 = m.addVar(lb=0.0,ub=0.0,name="x1511")
x1512 = m.addVar(lb=0.0,ub=0.0,name="x1512")
x1513 = m.addVar(lb=0.0,ub=0.0,name="x1513")
x1514 = m.addVar(lb=0.0,ub=0.0,name="x1514")
x1515 = m.addVar(lb=0.0,ub=1.0,name="x1515")
x1516 = m.addVar(lb=0.0,ub=1.0,name="x1516")
x1517 = m.addVar(lb=0.0,ub=1.0,name="x1517")
x1518 = m.addVar(lb=0.0,ub=1.0,name="x1518")
x1519 = m.addVar(lb=0.0,ub=1.0,name="x1519")
x160 = m.addVar(lb=0.0,ub=0.0,name="x160")
x161 = m.addVar(lb=0.0,ub=0.0,name="x161")
x162 = m.addVar(lb=0.0,ub=0.0,name="x162")
x163 = m.addVar(lb=0.0,ub=0.0,name="x163")
x164 = m.addVar(lb=0.0,ub=0.0,name="x164")
x165 = m.addVar(lb=0.0,ub=0.0,name="x165")
x166 = m.addVar(lb=0.0,ub=0.0,name="x166")
x167 = m.addVar(lb=0.0,ub=0.0,name="x167")
x168 = m.addVar(lb=0.0,ub=0.0,name="x168")
x169 = m.addVar(lb=0.0,ub=0.0,name="x169")
x1610 = m.addVar(lb=0.0,ub=0.0,name="x1610")
x1611 = m.addVar(lb=0.0,ub=0.0,name="x1611")
x1612 = m.addVar(lb=0.0,ub=0.0,name="x1612")
x1613 = m.addVar(lb=0.0,ub=0.0,name="x1613")
x1614 = m.addVar(lb=0.0,ub=0.0,name="x1614")
x1615 = m.addVar(lb=0.0,ub=0.0,name="x1615")
x1616 = m.addVar(lb=0.0,ub=1.0,name="x1616")
x1617 = m.addVar(lb=0.0,ub=1.0,name="x1617")
x1618 = m.addVar(lb=0.0,ub=1.0,name="x1618")
x1619 = m.addVar(lb=0.0,ub=1.0,name="x1619")
x170 = m.addVar(lb=0.0,ub=0.0,name="x170")
x171 = m.addVar(lb=0.0,ub=0.0,name="x171")
x172 = m.addVar(lb=0.0,ub=0.0,name="x172")
x173 = m.addVar(lb=0.0,ub=0.0,name="x173")
x174 = m.addVar(lb=0.0,ub=0.0,name="x174")
x175 = m.addVar(lb=0.0,ub=0.0,name="x175")
x176 = m.addVar(lb=0.0,ub=0.0,name="x176")
x177 = m.addVar(lb=0.0,ub=0.0,name="x177")
x178 = m.addVar(lb=0.0,ub=0.0,name="x178")
x179 = m.addVar(lb=0.0,ub=0.0,name="x179")
x1710 = m.addVar(lb=0.0,ub=0.0,name="x1710")
x1711 = m.addVar(lb=0.0,ub=0.0,name="x1711")
x1712 = m.addVar(lb=0.0,ub=0.0,name="x1712")
x1713 = m.addVar(lb=0.0,ub=0.0,name="x1713")
x1714 = m.addVar(lb=0.0,ub=0.0,name="x1714")
x1715 = m.addVar(lb=0.0,ub=0.0,name="x1715")
x1716 = m.addVar(lb=0.0,ub=0.0,name="x1716")
x1717 = m.addVar(lb=0.0,ub=1.0,name="x1717")
x1718 = m.addVar(lb=0.0,ub=1.0,name="x1718")
x1719 = m.addVar(lb=0.0,ub=1.0,name="x1719")
x180 = m.addVar(lb=0.0,ub=0.0,name="x180")
x181 = m.addVar(lb=0.0,ub=0.0,name="x181")
x182 = m.addVar(lb=0.0,ub=0.0,name="x182")
x183 = m.addVar(lb=0.0,ub=0.0,name="x183")
x184 = m.addVar(lb=0.0,ub=0.0,name="x184")
x185 = m.addVar(lb=0.0,ub=0.0,name="x185")
x186 = m.addVar(lb=0.0,ub=0.0,name="x186")
x187 = m.addVar(lb=0.0,ub=0.0,name="x187")
x188 = m.addVar(lb=0.0,ub=0.0,name="x188")
x189 = m.addVar(lb=0.0,ub=0.0,name="x189")
x1810 = m.addVar(lb=0.0,ub=0.0,name="x1810")
x1811 = m.addVar(lb=0.0,ub=0.0,name="x1811")
x1812 = m.addVar(lb=0.0,ub=0.0,name="x1812")
x1813 = m.addVar(lb=0.0,ub=0.0,name="x1813")
x1814 = m.addVar(lb=0.0,ub=0.0,name="x1814")
x1815 = m.addVar(lb=0.0,ub=0.0,name="x1815")
x1816 = m.addVar(lb=0.0,ub=0.0,name="x1816")
x1817 = m.addVar(lb=0.0,ub=0.0,name="x1817")
x1818 = m.addVar(lb=0.0,ub=1.0,name="x1818")
x1819 = m.addVar(lb=0.0,ub=1.0,name="x1819")
x190 = m.addVar(lb=0.0,ub=0.0,name="x190")
x191 = m.addVar(lb=0.0,ub=0.0,name="x191")
x192 = m.addVar(lb=0.0,ub=0.0,name="x192")
x193 = m.addVar(lb=0.0,ub=0.0,name="x193")
x194 = m.addVar(lb=0.0,ub=0.0,name="x194")
x195 = m.addVar(lb=0.0,ub=0.0,name="x195")
x196 = m.addVar(lb=0.0,ub=0.0,name="x196")
x197 = m.addVar(lb=0.0,ub=0.0,name="x197")
x198 = m.addVar(lb=0.0,ub=0.0,name="x198")
x199 = m.addVar(lb=0.0,ub=0.0,name="x199")
x1910 = m.addVar(lb=0.0,ub=0.0,name="x1910")
x1911 = m.addVar(lb=0.0,ub=0.0,name="x1911")
x1912 = m.addVar(lb=0.0,ub=0.0,name="x1912")
x1913 = m.addVar(lb=0.0,ub=0.0,name="x1913")
x1914 = m.addVar(lb=0.0,ub=0.0,name="x1914")
x1915 = m.addVar(lb=0.0,ub=0.0,name="x1915")
x1916 = m.addVar(lb=0.0,ub=0.0,name="x1916")
x1917 = m.addVar(lb=0.0,ub=0.0,name="x1917")
x1918 = m.addVar(lb=0.0,ub=0.0,name="x1918")
x1919 = m.addVar(lb=0.0,ub=1.0,name="x1919")
X = m.addVar(lb=0.0,ub=S,name="X")
D0 = m.addVar(lb=0.0,ub=S,name="D0")
D1 = m.addVar(lb=0.0,ub=S,name="D1")
D2 = m.addVar(lb=0.0,ub=S,name="D2")
D3 = m.addVar(lb=0.0,ub=S,name="D3")
D4 = m.addVar(lb=0.0,ub=S,name="D4")
D5 = m.addVar(lb=0.0,ub=S,name="D5")
D6 = m.addVar(lb=0.0,ub=S,name="D6")
D7 = m.addVar(lb=0.0,ub=S,name="D7")
D8 = m.addVar(lb=0.0,ub=S,name="D8")
D9 = m.addVar(lb=0.0,ub=S,name="D9")
D10 = m.addVar(lb=0.0,ub=S,name="D10")
D11 = m.addVar(lb=0.0,ub=S,name="D11")
D12 = m.addVar(lb=0.0,ub=S,name="D12")
D13 = m.addVar(lb=0.0,ub=S,name="D13")
D14 = m.addVar(lb=0.0,ub=S,name="D14")
D15 = m.addVar(lb=0.0,ub=S,name="D15")
D16 = m.addVar(lb=0.0,ub=S,name="D16")
D17 = m.addVar(lb=0.0,ub=S,name="D17")
D18 = m.addVar(lb=0.0,ub=S,name="D18")
D19 = m.addVar(lb=0.0,ub=S,name="D19")
m.addConstr(x00 + x01 + x02 + x03 + x04 + x05 + x06 + x07 + x08 + x09 + x010 + x011 + x012 + x013 + x014 + x015 + x016 + x017 + x018 + x019 == 1)
m.addConstr(x10 + x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x110 + x111 + x112 + x113 + x114 + x115 + x116 + x117 + x118 + x119 == 1)
m.addConstr(x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x210 + x211 + x212 + x213 + x214 + x215 + x216 + x217 + x218 + x219 == 1)
m.addConstr(x30 + x31 + x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 + x310 + x311 + x312 + x313 + x314 + x315 + x316 + x317 + x318 + x319 == 1)
m.addConstr(x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x410 + x411 + x412 + x413 + x414 + x415 + x416 + x417 + x418 + x419 == 1)
m.addConstr(x50 + x51 + x52 + x53 + x54 + x55 + x56 + x57 + x58 + x59 + x510 + x511 + x512 + x513 + x514 + x515 + x516 + x517 + x518 + x519 == 1)
m.addConstr(x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 + x68 + x69 + x610 + x611 + x612 + x613 + x614 + x615 + x616 + x617 + x618 + x619 == 1)
m.addConstr(x70 + x71 + x72 + x73 + x74 + x75 + x76 + x77 + x78 + x79 + x710 + x711 + x712 + x713 + x714 + x715 + x716 + x717 + x718 + x719 == 1)
m.addConstr(x80 + x81 + x82 + x83 + x84 + x85 + x86 + x87 + x88 + x89 + x810 + x811 + x812 + x813 + x814 + x815 + x816 + x817 + x818 + x819 == 1)
m.addConstr(x90 + x91 + x92 + x93 + x94 + x95 + x96 + x97 + x98 + x99 + x910 + x911 + x912 + x913 + x914 + x915 + x916 + x917 + x918 + x919 == 1)
m.addConstr(x100 + x101 + x102 + x103 + x104 + x105 + x106 + x107 + x108 + x109 + x1010 + x1011 + x1012 + x1013 + x1014 + x1015 + x1016 + x1017 + x1018 + x1019 == 1)
m.addConstr(x110 + x111 + x112 + x113 + x114 + x115 + x116 + x117 + x118 + x119 + x1110 + x1111 + x1112 + x1113 + x1114 + x1115 + x1116 + x1117 + x1118 + x1119 == 1)
m.addConstr(x120 + x121 + x122 + x123 + x124 + x125 + x126 + x127 + x128 + x129 + x1210 + x1211 + x1212 + x1213 + x1214 + x1215 + x1216 + x1217 + x1218 + x1219 == 1)
m.addConstr(x130 + x131 + x132 + x133 + x134 + x135 + x136 + x137 + x138 + x139 + x1310 + x1311 + x1312 + x1313 + x1314 + x1315 + x1316 + x1317 + x1318 + x1319 == 1)
m.addConstr(x140 + x141 + x142 + x143 + x144 + x145 + x146 + x147 + x148 + x149 + x1410 + x1411 + x1412 + x1413 + x1414 + x1415 + x1416 + x1417 + x1418 + x1419 == 1)
m.addConstr(x150 + x151 + x152 + x153 + x154 + x155 + x156 + x157 + x158 + x159 + x1510 + x1511 + x1512 + x1513 + x1514 + x1515 + x1516 + x1517 + x1518 + x1519 == 1)
m.addConstr(x160 + x161 + x162 + x163 + x164 + x165 + x166 + x167 + x168 + x169 + x1610 + x1611 + x1612 + x1613 + x1614 + x1615 + x1616 + x1617 + x1618 + x1619 == 1)
m.addConstr(x170 + x171 + x172 + x173 + x174 + x175 + x176 + x177 + x178 + x179 + x1710 + x1711 + x1712 + x1713 + x1714 + x1715 + x1716 + x1717 + x1718 + x1719 == 1)
m.addConstr(x180 + x181 + x182 + x183 + x184 + x185 + x186 + x187 + x188 + x189 + x1810 + x1811 + x1812 + x1813 + x1814 + x1815 + x1816 + x1817 + x1818 + x1819 == 1)
m.addConstr(x190 + x191 + x192 + x193 + x194 + x195 + x196 + x197 + x198 + x199 + x1910 + x1911 + x1912 + x1913 + x1914 + x1915 + x1916 + x1917 + x1918 + x1919 == 1)
m.addConstr(constant >= (M[0])*x00*(T[0]) + (M[0])*x01*(T[1]) + (M[0])*x02*(T[2]) + (M[0])*x03*(T[3]) + (M[0])*x04*(T[4]) + (M[0])*x05*(T[5]) + (M[0])*x06*(T[6]) + (M[0])*x07*(T[7]) + (M[0])*x08*(T[8]) + (M[0])*x09*(T[9]) + (M[0])*x010*(T[10]) + (M[0])*x011*(T[11]) + (M[0])*x012*(T[12]) + (M[0])*x013*(T[13]) + (M[0])*x014*(T[14]) + (M[0])*x015*(T[15]) + (M[0])*x016*(T[16]) + (M[0])*x017*(T[17]) + (M[0])*x018*(T[18]) + (M[0])*x019*(T[19]) + (M[1])*x11*(T[1]) + (M[1])*x12*(T[2]) + (M[1])*x13*(T[3]) + (M[1])*x14*(T[4]) + (M[1])*x15*(T[5]) + (M[1])*x16*(T[6]) + (M[1])*x17*(T[7]) + (M[1])*x18*(T[8]) + (M[1])*x19*(T[9]) + (M[1])*x110*(T[10]) + (M[1])*x111*(T[11]) + (M[1])*x112*(T[12]) + (M[1])*x113*(T[13]) + (M[1])*x114*(T[14]) + (M[1])*x115*(T[15]) + (M[1])*x116*(T[16]) + (M[1])*x117*(T[17]) + (M[1])*x118*(T[18]) + (M[1])*x119*(T[19]) + (M[2])*x22*(T[2]) + (M[2])*x23*(T[3]) + (M[2])*x24*(T[4]) + (M[2])*x25*(T[5]) + (M[2])*x26*(T[6]) + (M[2])*x27*(T[7]) + (M[2])*x28*(T[8]) + (M[2])*x29*(T[9]) + (M[2])*x210*(T[10]) + (M[2])*x211*(T[11]) + (M[2])*x212*(T[12]) + (M[2])*x213*(T[13]) + (M[2])*x214*(T[14]) + (M[2])*x215*(T[15]) + (M[2])*x216*(T[16]) + (M[2])*x217*(T[17]) + (M[2])*x218*(T[18]) + (M[2])*x219*(T[19]) + (M[3])*x33*(T[3]) + (M[3])*x34*(T[4]) + (M[3])*x35*(T[5]) + (M[3])*x36*(T[6]) + (M[3])*x37*(T[7]) + (M[3])*x38*(T[8]) + (M[3])*x39*(T[9]) + (M[3])*x310*(T[10]) + (M[3])*x311*(T[11]) + (M[3])*x312*(T[12]) + (M[3])*x313*(T[13]) + (M[3])*x314*(T[14]) + (M[3])*x315*(T[15]) + (M[3])*x316*(T[16]) + (M[3])*x317*(T[17]) + (M[3])*x318*(T[18]) + (M[3])*x319*(T[19]) + (M[4])*x44*(T[4]) + (M[4])*x45*(T[5]) + (M[4])*x46*(T[6]) + (M[4])*x47*(T[7]) + (M[4])*x48*(T[8]) + (M[4])*x49*(T[9]) + (M[4])*x410*(T[10]) + (M[4])*x411*(T[11]) + (M[4])*x412*(T[12]) + (M[4])*x413*(T[13]) + (M[4])*x414*(T[14]) + (M[4])*x415*(T[15]) + (M[4])*x416*(T[16]) + (M[4])*x417*(T[17]) + (M[4])*x418*(T[18]) + (M[4])*x419*(T[19]) + (M[5])*x55*(T[5]) + (M[5])*x56*(T[6]) + (M[5])*x57*(T[7]) + (M[5])*x58*(T[8]) + (M[5])*x59*(T[9]) + (M[5])*x510*(T[10]) + (M[5])*x511*(T[11]) + (M[5])*x512*(T[12]) + (M[5])*x513*(T[13]) + (M[5])*x514*(T[14]) + (M[5])*x515*(T[15]) + (M[5])*x516*(T[16]) + (M[5])*x517*(T[17]) + (M[5])*x518*(T[18]) + (M[5])*x519*(T[19]) + (M[6])*x66*(T[6]) + (M[6])*x67*(T[7]) + (M[6])*x68*(T[8]) + (M[6])*x69*(T[9]) + (M[6])*x610*(T[10]) + (M[6])*x611*(T[11]) + (M[6])*x612*(T[12]) + (M[6])*x613*(T[13]) + (M[6])*x614*(T[14]) + (M[6])*x615*(T[15]) + (M[6])*x616*(T[16]) + (M[6])*x617*(T[17]) + (M[6])*x618*(T[18]) + (M[6])*x619*(T[19]) + (M[7])*x77*(T[7]) + (M[7])*x78*(T[8]) + (M[7])*x79*(T[9]) + (M[7])*x710*(T[10]) + (M[7])*x711*(T[11]) + (M[7])*x712*(T[12]) + (M[7])*x713*(T[13]) + (M[7])*x714*(T[14]) + (M[7])*x715*(T[15]) + (M[7])*x716*(T[16]) + (M[7])*x717*(T[17]) + (M[7])*x718*(T[18]) + (M[7])*x719*(T[19]) + (M[8])*x88*(T[8]) + (M[8])*x89*(T[9]) + (M[8])*x810*(T[10]) + (M[8])*x811*(T[11]) + (M[8])*x812*(T[12]) + (M[8])*x813*(T[13]) + (M[8])*x814*(T[14]) + (M[8])*x815*(T[15]) + (M[8])*x816*(T[16]) + (M[8])*x817*(T[17]) + (M[8])*x818*(T[18]) + (M[8])*x819*(T[19]) + (M[9])*x99*(T[9]) + (M[9])*x910*(T[10]) + (M[9])*x911*(T[11]) + (M[9])*x912*(T[12]) + (M[9])*x913*(T[13]) + (M[9])*x914*(T[14]) + (M[9])*x915*(T[15]) + (M[9])*x916*(T[16]) + (M[9])*x917*(T[17]) + (M[9])*x918*(T[18]) + (M[9])*x919*(T[19]) + (M[10])*x1010*(T[10]) + (M[10])*x1011*(T[11]) + (M[10])*x1012*(T[12]) + (M[10])*x1013*(T[13]) + (M[10])*x1014*(T[14]) + (M[10])*x1015*(T[15]) + (M[10])*x1016*(T[16]) + (M[10])*x1017*(T[17]) + (M[10])*x1018*(T[18]) + (M[10])*x1019*(T[19]) + (M[11])*x1111*(T[11]) + (M[11])*x1112*(T[12]) + (M[11])*x1113*(T[13]) + (M[11])*x1114*(T[14]) + (M[11])*x1115*(T[15]) + (M[11])*x1116*(T[16]) + (M[11])*x1117*(T[17]) + (M[11])*x1118*(T[18]) + (M[11])*x1119*(T[19]) + (M[12])*x1212*(T[12]) + (M[12])*x1213*(T[13]) + (M[12])*x1214*(T[14]) + (M[12])*x1215*(T[15]) + (M[12])*x1216*(T[16]) + (M[12])*x1217*(T[17]) + (M[12])*x1218*(T[18]) + (M[12])*x1219*(T[19]) + (M[13])*x1313*(T[13]) + (M[13])*x1314*(T[14]) + (M[13])*x1315*(T[15]) + (M[13])*x1316*(T[16]) + (M[13])*x1317*(T[17]) + (M[13])*x1318*(T[18]) + (M[13])*x1319*(T[19]) + (M[14])*x1414*(T[14]) + (M[14])*x1415*(T[15]) + (M[14])*x1416*(T[16]) + (M[14])*x1417*(T[17]) + (M[14])*x1418*(T[18]) + (M[14])*x1419*(T[19]) + (M[15])*x1515*(T[15]) + (M[15])*x1516*(T[16]) + (M[15])*x1517*(T[17]) + (M[15])*x1518*(T[18]) + (M[15])*x1519*(T[19]) + (M[16])*x1616*(T[16]) + (M[16])*x1617*(T[17]) + (M[16])*x1618*(T[18]) + (M[16])*x1619*(T[19]) + (M[17])*x1717*(T[17]) + (M[17])*x1718*(T[18]) + (M[17])*x1719*(T[19]) + (M[18])*x1818*(T[18]) + (M[18])*x1819*(T[19]) + (M[19])*x1919*(T[19]))
m.addConstr(M[0]*x019 + M[1]*x119 + M[2]*x219 + M[3]*x319 + M[4]*x419 + M[5]*x519 + M[6]*x619 + M[7]*x719 + M[8]*x819 + M[9]*x919 + M[10]*x1019 + M[11]*x1119 + M[12]*x1219 + M[13]*x1319 + M[14]*x1419 + M[15]*x1519 + M[16]*x1619 + M[17]*x1719 + M[18]*x1819 + M[19]*x1919 - D19 == 0)
d19 = m.addVar(vtype=GRB.BINARY, name="d19")
m.addConstr(D19 >= d19)
m.addConstr(D19 <= S * d19)
m.addConstr(M[0]*x018 + M[1]*x118 + M[2]*x218 + M[3]*x318 + M[4]*x418 + M[5]*x518 + M[6]*x618 + M[7]*x718 + M[8]*x818 + M[9]*x918 + M[10]*x1018 + M[11]*x1118 + M[12]*x1218 + M[13]*x1318 + M[14]*x1418 + M[15]*x1518 + M[16]*x1618 + M[17]*x1718 + M[18]*x1818 - D18 == 0)
d18 = m.addVar(vtype=GRB.BINARY, name="d18")
m.addConstr(D18 >= d18)
m.addConstr(D18 <= S * d18)
m.addConstr(M[0]*x017 + M[1]*x117 + M[2]*x217 + M[3]*x317 + M[4]*x417 + M[5]*x517 + M[6]*x617 + M[7]*x717 + M[8]*x817 + M[9]*x917 + M[10]*x1017 + M[11]*x1117 + M[12]*x1217 + M[13]*x1317 + M[14]*x1417 + M[15]*x1517 + M[16]*x1617 + M[17]*x1717 - D17 == 0)
d17 = m.addVar(vtype=GRB.BINARY, name="d17")
m.addConstr(D17 >= d17)
m.addConstr(D17 <= S * d17)
m.addConstr(M[0]*x016 + M[1]*x116 + M[2]*x216 + M[3]*x316 + M[4]*x416 + M[5]*x516 + M[6]*x616 + M[7]*x716 + M[8]*x816 + M[9]*x916 + M[10]*x1016 + M[11]*x1116 + M[12]*x1216 + M[13]*x1316 + M[14]*x1416 + M[15]*x1516 + M[16]*x1616 - D16 == 0)
d16 = m.addVar(vtype=GRB.BINARY, name="d16")
m.addConstr(D16 >= d16)
m.addConstr(D16 <= S * d16)
m.addConstr(M[0]*x015 + M[1]*x115 + M[2]*x215 + M[3]*x315 + M[4]*x415 + M[5]*x515 + M[6]*x615 + M[7]*x715 + M[8]*x815 + M[9]*x915 + M[10]*x1015 + M[11]*x1115 + M[12]*x1215 + M[13]*x1315 + M[14]*x1415 + M[15]*x1515 - D15 == 0)
d15 = m.addVar(vtype=GRB.BINARY, name="d15")
m.addConstr(D15 >= d15)
m.addConstr(D15 <= S * d15)
m.addConstr(M[0]*x014 + M[1]*x114 + M[2]*x214 + M[3]*x314 + M[4]*x414 + M[5]*x514 + M[6]*x614 + M[7]*x714 + M[8]*x814 + M[9]*x914 + M[10]*x1014 + M[11]*x1114 + M[12]*x1214 + M[13]*x1314 + M[14]*x1414 - D14 == 0)
d14 = m.addVar(vtype=GRB.BINARY, name="d14")
m.addConstr(D14 >= d14)
m.addConstr(D14 <= S * d14)
m.addConstr(M[0]*x013 + M[1]*x113 + M[2]*x213 + M[3]*x313 + M[4]*x413 + M[5]*x513 + M[6]*x613 + M[7]*x713 + M[8]*x813 + M[9]*x913 + M[10]*x1013 + M[11]*x1113 + M[12]*x1213 + M[13]*x1313 - D13 == 0)
d13 = m.addVar(vtype=GRB.BINARY, name="d13")
m.addConstr(D13 >= d13)
m.addConstr(D13 <= S * d13)
m.addConstr(M[0]*x012 + M[1]*x112 + M[2]*x212 + M[3]*x312 + M[4]*x412 + M[5]*x512 + M[6]*x612 + M[7]*x712 + M[8]*x812 + M[9]*x912 + M[10]*x1012 + M[11]*x1112 + M[12]*x1212 - D12 == 0)
d12 = m.addVar(vtype=GRB.BINARY, name="d12")
m.addConstr(D12 >= d12)
m.addConstr(D12 <= S * d12)
m.addConstr(M[0]*x011 + M[1]*x111 + M[2]*x211 + M[3]*x311 + M[4]*x411 + M[5]*x511 + M[6]*x611 + M[7]*x711 + M[8]*x811 + M[9]*x911 + M[10]*x1011 + M[11]*x1111 - D11 == 0)
d11 = m.addVar(vtype=GRB.BINARY, name="d11")
m.addConstr(D11 >= d11)
m.addConstr(D11 <= S * d11)
m.addConstr(M[0]*x010 + M[1]*x110 + M[2]*x210 + M[3]*x310 + M[4]*x410 + M[5]*x510 + M[6]*x610 + M[7]*x710 + M[8]*x810 + M[9]*x910 + M[10]*x1010 - D10 == 0)
d10 = m.addVar(vtype=GRB.BINARY, name="d10")
m.addConstr(D10 >= d10)
m.addConstr(D10 <= S * d10)
m.addConstr(M[0]*x09 + M[1]*x19 + M[2]*x29 + M[3]*x39 + M[4]*x49 + M[5]*x59 + M[6]*x69 + M[7]*x79 + M[8]*x89 + M[9]*x99 - D9 == 0)
d9 = m.addVar(vtype=GRB.BINARY, name="d9")
m.addConstr(D9 >= d9)
m.addConstr(D9 <= S * d9)
m.addConstr(M[0]*x08 + M[1]*x18 + M[2]*x28 + M[3]*x38 + M[4]*x48 + M[5]*x58 + M[6]*x68 + M[7]*x78 + M[8]*x88 - D8 == 0)
d8 = m.addVar(vtype=GRB.BINARY, name="d8")
m.addConstr(D8 >= d8)
m.addConstr(D8 <= S * d8)
m.addConstr(M[0]*x07 + M[1]*x17 + M[2]*x27 + M[3]*x37 + M[4]*x47 + M[5]*x57 + M[6]*x67 + M[7]*x77 - D7 == 0)
d7 = m.addVar(vtype=GRB.BINARY, name="d7")
m.addConstr(D7 >= d7)
m.addConstr(D7 <= S * d7)
m.addConstr(M[0]*x06 + M[1]*x16 + M[2]*x26 + M[3]*x36 + M[4]*x46 + M[5]*x56 + M[6]*x66 - D6 == 0)
d6 = m.addVar(vtype=GRB.BINARY, name="d6")
m.addConstr(D6 >= d6)
m.addConstr(D6 <= S * d6)
m.addConstr(M[0]*x05 + M[1]*x15 + M[2]*x25 + M[3]*x35 + M[4]*x45 + M[5]*x55 - D5 == 0)
d5 = m.addVar(vtype=GRB.BINARY, name="d5")
m.addConstr(D5 >= d5)
m.addConstr(D5 <= S * d5)
m.addConstr(M[0]*x04 + M[1]*x14 + M[2]*x24 + M[3]*x34 + M[4]*x44 - D4 == 0)
d4 = m.addVar(vtype=GRB.BINARY, name="d4")
m.addConstr(D4 >= d4)
m.addConstr(D4 <= S * d4)
m.addConstr(M[0]*x03 + M[1]*x13 + M[2]*x23 + M[3]*x33 - D3 == 0)
d3 = m.addVar(vtype=GRB.BINARY, name="d3")
m.addConstr(D3 >= d3)
m.addConstr(D3 <= S * d3)
m.addConstr(M[0]*x02 + M[1]*x12 + M[2]*x22 - D2 == 0)
d2 = m.addVar(vtype=GRB.BINARY, name="d2")
m.addConstr(D2 >= d2)
m.addConstr(D2 <= S * d2)
m.addConstr(M[0]*x01 + M[1]*x11 - D1 == 0)
d1 = m.addVar(vtype=GRB.BINARY, name="d1")
m.addConstr(D1 >= d1)
m.addConstr(D1 <= S * d1)
m.addConstr(M[0]*x00 - D0 == 0)
d0 = m.addVar(vtype=GRB.BINARY, name="d0")
m.addConstr(D0 >= d0)
m.addConstr(D0 <= S * d0)


m.addConstr(X <= (D0) + (1 - d0) * S)
m.addConstr(X <= (D1) + (1 - d1) * S)
m.addConstr(X <= (D2) + (1 - d2) * S)
m.addConstr(X <= (D3) + (1 - d3) * S)
m.addConstr(X <= (D4) + (1 - d4) * S)
m.addConstr(X <= (D5) + (1 - d5) * S)
m.addConstr(X <= (D6) + (1 - d6) * S)
m.addConstr(X <= (D7) + (1 - d7) * S)
m.addConstr(X <= (D8) + (1 - d8) * S)
m.addConstr(X <= (D9) + (1 - d9) * S)
m.addConstr(X <= (D10) + (1 - d10) * S)
m.addConstr(X <= (D11) + (1 - d11) * S)
m.addConstr(X <= (D12) + (1 - d12) * S)
m.addConstr(X <= (D13) + (1 - d13) * S)
m.addConstr(X <= (D14) + (1 - d14) * S)
m.addConstr(X <= (D15) + (1 - d15) * S)
m.addConstr(X <= (D16) + (1 - d16) * S)
m.addConstr(X <= (D17) + (1 - d17) * S)
m.addConstr(X <= (D18) + (1 - d18) * S)
m.addConstr(X <= (D19) + (1 - d19) * S)
m.setObjective(X, GRB.MAXIMIZE)
startTime = int(round(time.time() * 1000))

m.Params.IntFeasTol=0.1
m.optimize()

endTime = int(round(time.time() * 1000))
rTime = endTime - startTime
print("Time taken to calculate (in milli-seconds):")
print(rTime)
f1 = open("res_kruskal_20_0.5.txt",'w')
f1.write('\n')
f1.write(str(rTime))
f1.write('\n')
for d in m.getVars():
   name = d.varName
   val = d.x
   f1.write(str(name)+" ")
   f1.write(str(val))
   f1.write('\n')
i = 0 
final_perf = 0 
res = m.getAttr("X", m.getVars())
while i < N:
   j = i 
   while j < N:
      if(res[i*N+j] > 0.0001): 
         final_perf = final_perf + M[i] * res[i*N+j]*T[j] 
      j = j + 1
   i = i + 1
final_perf = final_perf 
print("Final Performance overhead: ")
print(final_perf/init_p - 1)
f1.close()
